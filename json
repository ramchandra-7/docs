What is JSON?JSON is a lightweight data-interchange format that is easy for humans to read and write, and easy for machines to parse and generate. It's often used to transmit data between a server and a web application, as well as to store configuration data.
Basic Structure:JSON data is represented as key-value pairs. A key is a string, and the value can be a string, number, boolean, array, object, or null. Here's a simple example:
 
{
  "name": "John Doe",
  "age": 25,
  "isStudent": true,
  "courses": ["Math", "Science"],
  "address": {
    "city": "Example City",
    "zipcode": "12345"
  }
}

In this example:
"name": "John Doe": Key is "name," and the value is a string.
"age": 25: Key is "age," and the value is a number.
"isStudent": true: Key is "isStudent," and the value is a boolean.
"courses": ["Math", "Science"]: Key is "courses," and the value is an array.
"address": { "city": "Example City", "zipcode": "12345" }: Key is "address," and the value is an object.
Array:Arrays in JSON are ordered lists of values. They are represented by square brackets []. Example:
 
{
  "fruits": ["Apple", "Banana", "Orange"]
}

Nested Objects:Objects can contain other objects. Example:
 
{
  "person": {
    "name": "Jane Doe",
    "age": 30,
    "address": {
      "city": "Another City",
      "zipcode": "67890"
    }
  }
}

How to Read:
The keys are strings and should be enclosed in double quotes.
Values can be strings, numbers, booleans, arrays, objects, or null.
Objects are enclosed in curly braces {}, and arrays in square brackets [].
JSON is hierarchical. Each key can have its own value, and values can be objects or arrays, creating a nested structure.
Example:Here's a simple example of a JSON structure:
 
{
  "name": "ChatGPT",
  "type": "AI Assistant",
  "version": 3,
  "isAwesome": true,
  "features": ["Natural Language Understanding", "Conversation", "Information Retrieval"],
  "team": {
    "developers": ["Alice", "Bob", "Charlie"],
    "designer": "David"
  }
}
